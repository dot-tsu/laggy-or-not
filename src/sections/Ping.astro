---
import { Button } from "@/components/ui/button";
---

<script>
  import Chart from "chart.js/auto";
  import Ping from "@/scripts/ping";

  let pingAvg = document.getElementById("pingAvg");
  let pingMin = document.getElementById("pingMin");
  let pingMax = document.getElementById("pingMax");
  const pingChart = document.getElementById("pingChart") as HTMLCanvasElement;
  let chartInstance: Chart | null = null;
  let pingInterval: number | null = null;
  let isPinging = false;
  let pingsData: number[] = [];

  const handlePingResult = (pongTime: number) => {
    pingsData.push(pongTime);
    const averagePing =
      pingsData.reduce((acc, value) => acc + value, 0) / pingsData.length;
    const minPing = Math.min(...pingsData);
    const maxPing = Math.max(...pingsData);
    if (pingAvg && pingMin && pingMax) {
      pingAvg.textContent = `${averagePing.toFixed(0)} ms`;
      pingMin.textContent = `${minPing.toFixed(0)} ms`;
      pingMax.textContent = `${maxPing.toFixed(0)} ms`;
    }
    updateChart();
  };

  const pingGoogle = () => {
    const pingInstance = new Ping();

    pingInstance.ping("https://www.google.com/", (error, pongTime) => {
      if (error) {
        console.error("Error pinging Google:", error);
      } else {
        handlePingResult(pongTime);
      }
    });
  };

  const updateChart = () => {
    const data = pingsData.map((ping, index) => ({
      index: index + 1,
      ping,
    }));

    if (chartInstance) {
      chartInstance.data.labels = data.map((row) => row.index);
      chartInstance.data.datasets[0].data = data.map((row) => row.ping);
      chartInstance.data.datasets[1].data = Array(data.length).fill(
        Math.min(...pingsData)
      );
      chartInstance.data.datasets[2].data = Array(data.length).fill(
        Math.max(...pingsData)
      );
      chartInstance.update();
    } else {
      chartInstance = new Chart(pingChart, {
        type: "line",
        data: {
          labels: data.map((row) => row.index),
          datasets: [
            {
              label: "Your ping",
              data: data.map((row) => row.ping),
              tension: 0.5,
              borderColor: "#5F7B81",
              backgroundColor: "#5F7B81",
            },
            {
              label: "Min ping",
              data: Array(data.length).fill(Math.min(...pingsData)),
              tension: 0.5,
              borderColor: "rgba(71, 177, 71, 0.2)",
              backgroundColor: "rgba(71, 177, 71, 0.2)",
              pointRadius: 0,
            },
            {
              label: "Max ping",
              data: Array(data.length).fill(Math.max(...pingsData)),
              tension: 0.5,
              borderColor: "rgba(255, 102, 102, 0.2)",
              backgroundColor: "rgba(255, 102, 102, 0.2)",
              pointRadius: 0,
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: "Ping Delay (ms)",
                color: "#f1f4f0",
              },
            },
            x: {
              title: {
                display: true,
                text: "Number of pings",
                color: "#f1f4f0",
              },
            },
          },
          plugins: {
            legend: {
              labels: {
                color: "#f1f4f0",
              },
            },
          },
        },
      });
    }
  };

  const togglePing = () => {
    const pingButton = document.getElementById("pingButton");
    if (!isPinging) {
      pingInterval = setInterval(pingGoogle, 1000);
      isPinging = true;
      if (pingButton) {
        pingButton.textContent = "Stop Pinging";
      }
      if (chartInstance) {
        chartInstance.data.datasets[0].data = [];
        chartInstance.data.datasets[1].data = [];
        chartInstance.data.datasets[2].data = [];
        chartInstance.update();
      }
    } else {
      if (pingInterval) {
        clearInterval(pingInterval);
      }
      isPinging = false;
      pingsData = [];

      if (pingButton) {
        pingButton.textContent = "Start Pinging";
      }
    }
  };

  const pingButton = document.getElementById("pingButton");
  if (pingButton) {
    pingButton.addEventListener("click", togglePing);
  }
  window.addEventListener("DOMContentLoaded", () => {
    updateChart();
  });
</script>

<section class="w-[95%] lg:w-3/4 max-w-[60rem] rounded-md md:flex">
  <div
    class="flex md:flex-col justify-between text-nowrap text-xs md:text-base gap-5 flex-wrap [&>p]:rounded-md [&>p]:w-full [&>p]:text-center [&>p]:p-4 md:[&>p]:p-8 [&>p>span]:font-semibold [&>p>span]:block">
    <h2 class="text-center rounded-md bg-accent/50 p-5 hidden md:block">
      Your Stats
    </h2>
    <p class="bg-accent/70">
      Average Ping: <span id="pingAvg">0 ms</span>
    </p>
    <p class="bg-accent/80">Minimum Ping: <span id="pingMin">0 ms</span></p>
    <p class="bg-accent/90 mb-5 md:m-0">
      Maximum Ping: <span id="pingMax">0 ms</span>
    </p>
  </div>
  <div class="flex flex-col w-full md:ml-3 bg-accent/40 p-5 rounded-md">
    <canvas id="pingChart" class="flex-1"></canvas>
    <div class="flex justify-between items-center float-right md:float-none">
      <p class="text-xs text-content/50">
        â“˜ Toggle ping data display on graph by clicking the colored square
      </p>
      <Button id="pingButton">Start Pinging </Button>
    </div>
  </div>
</section>
